---CREATE A DATABASE UNION BANK
CREATE DATABASE UNION_BANK;
USE UNION_BANK;

---CREATE A SCHEMA, NAME IT BORROWER
CREATE SCHEMA BORROWER;

---CREATE BORROWER TABLE IN BORROWER SCHEMA
CREATE TABLE BORROWER.BORROWER
(
BORROWERID INT NOT NULL,
BORROWERFIRSTNAME VARCHAR (255) NOT NULL,
BORROWERMIDDLENAMEINITIAL CHAR (1) NOT NULL,
BORROWERLASTNAME CHAR (255) NOT NULL,
DOB DATETIME NOT NULL,
GENDER CHAR (1) NULL,
TAXPAYERID_SSN VARCHAR (9) NOT NULL,
PHONENUMBER VARCHAR (10) NOT NULL,
EMAIL VARCHAR (255) NOT NULL,
CITIZENSHIP VARCHAR (255) NULL,
BENEFICIARYNAME VARCHAR (255) NULL,
ISUSCITIZEN BIT NULL,
CREATEDATE DATETIME NOT NULL
);


---CREATE 'BORROWER ADDRESS' TABLE IN BORROWER SCHEMA
CREATE TABLE BORROWER.BORROWERADDRESS
(
ADDRESSID INT NOT NULL,
BORROWERID INT NOT NULL,
STREETADDRESS VARCHAR (255) NOT NULL,
ZIP VARCHAR (5) NOT NULL,
CREATEDATE DATETIME NOT NULL
);



---CREATE 'CALENDER' TABLE IN DEFAULT SCHEMA
CREATE TABLE CALENDER
( 
CALENDERDATE DATETIME NULL
);



---CREATE 'STATE' TABLE IN DEFAULT SCHEMA
CREATE TABLE STATE
(
STATEID CHAR (2) NOT NULL,
STATENAME VARCHAR (255) NOT NULL,
CREATEDATE DATETIME NOT NULL,
);




---CREATE 'US_ZIPCODES' TABLE IN DEFAULT SCHEMA
CREATE TABLE US_ZIPCODES
(
ISSURROGATEKEY INT NOT NULL,
ZIP VARCHAR (5) NOT NULL,
LATITUDE FLOAT NULL,
LONGITUDE FLOAT NULL,
CITY VARCHAR (255) NULL,
STATE_ID CHAR (2) NULL,
POPULATION INT NULL,
DENSITY DECIMAL(18,0) NULL,
COUNTY_FIPS VARCHAR (10) NULL,
COUNTY_NAME VARCHAR (255) NULL,
COUNTY_NAMES_ALL VARCHAR (255) NULL,
COUNTY_FIPS_ALL VARCHAR (50) NULL,
TIMEZONE VARCHAR (255) NULL,
CREATEDATE DATETIME NOT NULL
);



---CREATE SCHEMA 'LOAN'
CREATE SCHEMA LOAN;


---CREATE 'LOANSETUPINFORMATION' TABLE IN LOAN SCHEMA
CREATE TABLE LOAN.LOANSETUPINFORMATION
(
ISSURROGATEKEY INT NOT NULL,
LOANNUMBER VARCHAR (10) NOT NULL,
PURCHASEAMOUNT NUMERIC(18,2) NOT NULL,
PURCHASEDATE DATETIME NOT NULL,
LOANTERM INT NOT NULL,
BORROWERID INT NOT NULL,
UNDERWRITERID INT NOT NULL,
PRODUCTID CHAR (2) NOT NULL,
INTERESTRATE DECIMAL(3,2) NOT NULL,
PAYMENTFREQUENCY INT NOT NULL,
APPRAISALVALUE NUMERIC(18,2) NOT NULL,
CREATEDATE DATETIME NOT NULL,
LTV DECIMAL(4,2) NOT NULL,
FIRSTINTERESTPAYMENTDATE DATETIME NULL,
MATURITYDATE DATETIME NOT NULL
);



---CREATE 'LOANPERIODIC' TABLE
CREATE TABLE LOAN.LOANPERIODIC
(
ISSURROGATEKEY INT NOT NULL,
LOANNUMBER VARCHAR (10) NOT NULL,
CYCLEDATE DATETIME NOT NULL,
EXTRAMONTHLYPAYMENT NUMERIC(18,2) NOT NULL,
UNPAIDPRINCIPALBALANCE NUMERIC(18,2) NOT NULL,
BEGINNINGSCHEDULEBALANCE NUMERIC(18,2) NOT NULL,
PAIDINSTALLMENT NUMERIC(18,2) NOT NULL,
INTERESTPORTION NUMERIC(18,2) NOT NULL,
PRINCIPALPORTION NUMERIC(18,2) NOT NULL,
ENDSCHEDULE NUMERIC(18,2) NOT NULL,
ACTUALENDSCHEDULE NUMERIC(18,2) NOT NULL,
TOTALINTERESTACCURED NUMERIC(18,2) NOT NULL,
TOTALPRINCIPALACCURED NUMERIC(18,2) NOT NULL,
DEFAULTPENALTY NUMERIC(18,2) NOT NULL,
DELIQUENCYCODE NUMERIC(10,0) NOT NULL,
CREATEDATE DATETIME NOT NULL
);




---CREATE 'LU_DELIQUENCY' TABLE
CREATE TABLE LOAN.LU_DELIQUENCY
(
DELIQUENCYCODE INT NOT NULL,
DELIQUENCY VARCHAR (255) NOT NULL
);



---CREATE 'LU_PAYMENTFREQUENCY' TABLE
CREATE TABLE LOAN.LU_PAYMENTFREQUENCY
(
PAYMENTFREQUENCY INT NOT NULL,
PAYMENTISMADEEVERY INT NOT NULL,
PAYMENTFREQUENCY_DESCRIPTION VARCHAR (255) NOT NULL
);



---CREATE 'UNDERWRITER' TABLE
CREATE TABLE LOAN.UNDERWRITER
(
UNDERWRITERID INT NOT NULL,
UNDERWRITERFIRSTNAME VARCHAR (255) NULL,
UNDERWRITERMIDDLEINITIAL CHAR (1) NULL,
PHONENUMBER VARCHAR (14) NULL,
EMAIL VARCHAR (255) NOT NULL,
CREATEDATE DATETIME NOT NULL,
UNDERWRITERLASTNAME VARCHAR (255) NOT NULL
);


----------MAKING PRIMARY KEYS FOT ALL TABLES
---MAKE 'BORROWER ID' THE PRIMARY KEY IN 'BORROWER' TABLE
ALTER TABLE[BORROWER].[BORROWER]
ADD CONSTRAINT PK_BORROWER_BORROWERID PRIMARY KEY ([BORROWERID]);


---MAKE 'BORROWERID' THE PRIMARY KEY IN 'BORROWER ADDRESS' TABLE
ALTER TABLE [BORROWER].[BORROWERADDRESS]
ADD CONSTRAINT PK_BORROWERADDRESS_BORROWERID PRIMARY KEY (BORROWERID)


---MAKE 'ZIP' THE PRIMARY KEY IN 'US ZIPCODES' TABLE
ALTER TABLE [dbo].[US_ZIPCODES]
ADD CONSTRAINT PK_USZIPCODES_ZIP PRIMARY KEY ([ZIP]);


---MAKE 'LOAN NUMBER' THE PRIMARY KEY IN 'LOAN PERIODIC' TABLE
ALTER TABLE [LOAN].[LOANPERIODIC]
ADD CONSTRAINT PK_LOANPERIODIC_LOANNUMBER PRIMARY KEY ([LOANNUMBER]);


---MAKE 'LOAN NUMBER' THE PRIMARY KEY IN 'LOAN SETUP INFORMATION' TABLE
ALTER TABLE [LOAN].[LOANSETUPINFORMATION]
ADD CONSTRAINT PK_LSI_LOANNUMBER PRIMARY KEY ([LOANNUMBER]);


---MAKE 'DELIQUENCY CODE' THE PRIMARY CODE IN 'LU DELIQUENCY' TABLE
ALTER TABLE [LOAN].[LU_DELIQUENCY]
ADD CONSTRAINT PK_LUDELIQUENCY_DC PRIMARY KEY ([DELIQUENCYCODE]);


---MAKE 'PAYMENTFREQUENCY' THE PRIMARY KEY IN 'LUPAYMENTFREQUENCY' TABLE
ALTER TABLE[LOAN].[LU_PAYMENTFREQUENCY]
ADD CONSTRAINT PK_LPF_PF PRIMARY KEY ([PAYMENTFREQUENCY]);


---MAKE 'UNDERWRITERID' THE PRIMARY KEY IN 'UNDERWRITER' TABLE
ALTER TABLE[LOAN].[UNDERWRITER]
ADD CONSTRAINT PK_UNDERWRITER_UWI PRIMARY KEY ([UNDERWRITERID]);


---MAKE 'STATE ID' THE PRIMARY KEY IN 'STATE' TABLE
ALTER TABLE [dbo].[STATE]
ADD CONSTRAINT PK_STATE_STATEID PRIMARY KEY ([STATEID]); 


---ALL BORROWER MUST BE AT LEAST 18 YEARS OF AGE AS OF THE DATE OF ENTRY  
ALTER TABLE [BORROWER].[BORROWER]
ADD CONSTRAINT CHK_BORROWER_DOB CHECK (DOB<=DATEADD(YEAR,-18,GETDATE()))


---THE EMAIL SHOULD CONTAIN THE '@' SYMBOL IN THE INSERTED VALUE    
ALTER TABLE [Borrower].[Borrower]
ADD CONSTRAINT CHK_Borrower_Email CHECK (EMAIL LIKE '%@%');


---THE NUMBER OF DIGITS ENTERED HERE MUST BE 10.NO LESS NO MORE    
ALTER TABLE [BORROWER].[BORROWER]
ADD CONSTRAINT CHK_BORROWER_PHONENUMBER CHECK (LEN (PHONENUMBER)=10);


---THE NUMBER OF DIGITS ENTERED HERE MUST BE 9. NO LESS NO MORE    
ALTER TABLE [BORROWER].[BORROWER]
ADD CONSTRAINT CHK_BORROWER_SSN CHECK (LEN ([TAXPAYERID_SSN])=9);


---IF NO VALUE IS INSERTED, THEN THE CREATE DATE SHOULD DEFAULT TO THE CURRENT TIME WHEN THE INSERTION IS DONE    
ALTER TABLE [BORROWER].[BORROWER]
ADD CONSTRAINT DF_BORROWER_CREATEDATE DEFAULT (GETDATE()) FOR CREATEDATE;


---SHOULD BE THE UNIQUE IDENTIFIER OF A RECORD ON THIS TABLE.
---A BORROWER CAN ONLY HAVE ONE BORROWERID AND A BORROWERID CAN ONLY BE ASSIGNED TO ONE BORROWER    
ALTER TABLE [BORROWER].[BORROWER]
ADD CONSTRAINT UK_BORROWER_BORROWERID UNIQUE (BORROWERID)


---IF NO VALUE IS INSERTED, THEN THE CREATE DATE SHOULD DEFAULT TO THE CURRENT 
---TIME WHEN THE INSERTION IS DONE    
ALTER TABLE [BORROWER].[BORROWERADDRESS]
ADD CONSTRAINT DF_BORROWERADDRESS_CREATEDATE DEFAULT (GETDATE()) FOR CREATEDATE;


---THIS COLUMN SHOULD CONTAIN THE SAME VALUES AS THOSE IN THE BORROWERID OF THE BORROWER TABLE. 
---IN ESSENCE, THE BORROWERID IN BOTH TABLES SHOULD CREATE A RELATIONSHIP IN BOTH TABLES.     
ALTER TABLE [BORROWER].[BORROWERADDRESS]
ADD CONSTRAINT FK_BORROWERADDRESS_BORROWERID FOREIGN KEY (BORROWERID) REFERENCES[BORROWER].[BORROWER] ([BORROWERID]);


---THIS COLUMN SHOULD CONTAIN THE SAME VALUES AS THOSE IN THE ZIP OF THE US_ZIP_CODES TABLE. 
---IN ESSENCE, THE ZIP IN BOTH TABLES SHOULD CREATE A RELATIONSHIP IN BOTH TABLES.     
ALTER TABLE [BORROWER].[BORROWERADDRESS]
ADD CONSTRAINT FK_BORROWERADDRESS_ZIP FOREIGN KEY (ZIP) REFERENCES  [dbo].[US_ZIPCODES] ([ZIP]);


---THIS COMBINATION SHOULD BE THE UNIQUE IDENTIFIER OF A RECORD ON THIS TABLE.     
ALTER TABLE [BORROWER].[BORROWERADDRESS]
ADD CONSTRAINT UK_BORROWERADDRESS_ADDRESSID_BORROWERID UNIQUE ([ADDRESSID],[BORROWERID]);


---(INTERESTPORTION+PRINCIPALPORTION)=PAIDINSTALLMENT    
ALTER TABLE [LOAN].[LOANPERIODIC]
ADD CONSTRAINT CHK_LOANPERIODIC_IP_PP_PI CHECK (([INTERESTPORTION]+[PRINCIPALPORTION])=[PAIDINSTALLMENT]);


---IF NO VALUE IS INSERTED, THEN THE CREATE DATE SHOULD DEFAULT TO THE CURRENT TIME WHEN THE INSERTION IS DONE    
ALTER TABLE[LOAN].[LOANPERIODIC]
ADD CONSTRAINT DF_LOANPERIODIC_CREATEDATE DEFAULT (GETDATE()) FOR CREATEDATE;


---IF NO VALUE IS INSERTED, THEN THE DEFAULT VALUE SHOULD BE ZERO    
ALTER TABLE [LOAN].[LOANPERIODIC]
ADD CONSTRAINT DF_LOANPERIODIC_EXTRAMONTHLYPAYMENT DEFAULT ('0') FOR [EXTRAMONTHLYPAYMENT];


---IS A FOREIGN KEY REFERENCING THE THE COLUMN 'LOANNUMBER' IN THE LOANSETUPINFORMATION TABLE     
ALTER TABLE[LOAN].[LOANPERIODIC] 
ADD CONSTRAINT FK_LOANPERIODIC_LOANNUMBER FOREIGN KEY ([LOANNUMBER]) REFERENCES  [LOAN].[LOANSETUPINFORMATION] ([LOANNUMBER]);


---CHANGED DATA TYPE FROM CHAR TO INT
ALTER TABLE[LOAN].[LOANPERIODIC]
ALTER COLUMN DELIQUENCYCODE INT NOT NULL


---IS A FOREIGN KEY REFERENCING THE THE COLUMN 'DELINQUENCYCODE' IN THE LU_DELINQUENCY TABLE     
ALTER TABLE [LOAN].[LOANPERIODIC]
ADD CONSTRAINT FK_LOANPERIODIC_DC FOREIGN KEY ([DELIQUENCYCODE]) REFERENCES [LOAN].[LU_DELIQUENCY] ([DELIQUENCYCODE]);


---THIS COMBINATION SHOULD BE THE UNIQUE IDENTIFIER OF A RECORD ON THIS TABLE
ALTER TABLE [LOAN].[LOANPERIODIC]
ADD CONSTRAINT UK_LOANPERIODIC_LN_CD UNIQUE ([LOANNUMBER],[CYCLEDATE]);


---THIS COLUMN SHOULD ONLY TAKE THE VALUES 35, 30, 15 AND 10    
ALTER TABLE [LOAN].[LOANSETUPINFORMATION]
ADD CONSTRAINT CHK_LSI_LOANTERM CHECK ([LOANTERM]=35 OR [LOANTERM]=30 OR[LOANTERM]=15 OR[LOANTERM]=10)


---THE VALUES ON THIS COLUMN SHOULD BE ONLY BETWEEN 0.01 AND 0.30    
ALTER TABLE[LOAN].[LOANSETUPINFORMATION]
ADD CONSTRAINT CHK_LSI_INTERESTRATE CHECK ([INTERESTRATE]BETWEEN 0.01AND 0.30);


---IF NO VALUE IS INSERTED, THEN THE CREATE DATE SHOULD DEFAULT TO THE CURRENT TIME WHEN THE INSERTION IS DONE    
ALTER TABLE[LOAN].[LOANSETUPINFORMATION]
ADD CONSTRAINT DF_LSI_CREATEDATE DEFAULT (GETDATE()) FOR CREATEDATE;


---THIS COLUMN SHOULD CONTAIN THE SAME VALUES AS THOSE IN THE BORROWERID OF THE BORROWER TABLE. 
---IN ESSENCE, THE BORROWERID IN BOTH TABLES SHOULD CREATE A RELATIONSHIP IN BOTH TABLES
ALTER TABLE[LOAN].[LOANSETUPINFORMATION]
ADD CONSTRAINT FK_LSI_BORROWERID FOREIGN KEY ([BORROWERID]) REFERENCES[BORROWER].[BORROWER] ([BORROWERID]);


---IS A FOREIGN KEY REFERENCING THE COLUMN 'PAYMENTFREQUENCY' IN THE 'LU_PAYMENTFREQUENCY' TABLE     
ALTER TABLE[LOAN].[LOANSETUPINFORMATION]
ADD CONSTRAINT FK_LSI_PF FOREIGN KEY ([PAYMENTFREQUENCY]) REFERENCES [LOAN].[LU_PAYMENTFREQUENCY]([PAYMENTFREQUENCY]);


---IS A FOREIGN KEY REFERENCING THE COLUMN 'UNDERWRITERID' IN THE UNDERWRITER TABLE     
ALTER TABLE[LOAN].[LOANSETUPINFORMATION]
ADD CONSTRAINT FK_LSI_UWI FOREIGN KEY ([UNDERWRITERID]) REFERENCES [LOAN].[UNDERWRITER]([UNDERWRITERID]);


---IF NO VALUE IS INSERTED, THEN THE CREATE DATE SHOULD DEFAULT TO THE CURRENT TIME WHEN THE INSERTION IS DONE    
ALTER TABLE [dbo].[STATE]
ADD CONSTRAINT DF_STATE_CREATEDATE DEFAULT (GETDATE()) FOR[CREATEDATE] ;


---THIS COLUMN CAN ONLY TAKE UNIQUE VALUES, NO DUPLICATES.     
ALTER TABLE[dbo].[STATE]
ADD CONSTRAINT UK_STATE_STATENAME UNIQUE ([STATENAME])


---THE EMAIL SHOULD CONTAINT THE '@' SYMBOL IN THE INSERTED VALUE    
ALTER TABLE[LOAN].[UNDERWRITER]
ADD CONSTRAINT CHK_Borrower_Email CHECK ([EMAIL] LIKE '%@%');


---IF NO VALUE IS INSERTED, THEN THE CREATE DATE SHOULD DEFAULT TO THE CURRENT TIME WHEN THE INSERTION IS DONE    
ALTER TABLE[LOAN].[UNDERWRITER]
ADD CONSTRAINT DF_UNDERWRITER_CREATEDATE DEFAULT (GETDATE()) FOR CREATEDATE;


---IF NO VALUE IS INSERTED, THEN THE CREATE DATE SHOULD DEFAULT TO THE CURRENT TIME WHEN THE INSERTION IS DONE    
ALTER TABLE[dbo].[US_ZIPCODES]
ADD CONSTRAINT Df_USZC_CREATEDATE DEFAULT (GETDATE()) FOR CREATEDATE;


---IS A FOREIGN KEY REFERENCING THE COLUMN 'STATEID' IN THE 'STATE' TABLE     
ALTER TABLE [dbo].[US_ZIPCODES]
ADD CONSTRAINT FK_USZC_STATEID FOREIGN KEY ([STATE_ID]) REFERENCES [dbo].[STATE]([STATEID]);
